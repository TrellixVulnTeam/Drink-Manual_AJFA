{"ast":null,"code":"var _jsxFileName = \"/Users/KarolCiesielski/Desktop/myProject/Drink-Manual/src/context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\nconst AppProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState('a');\n  const [cocktails, setCocktails] = useState([]);\n  const fetchDrinks = useCallback(async () => {\n    try {\n      const response = await fetch(`${url}${searchTerm}`);\n      const data = await response.json();\n      console.log(data);\n      const {\n        drinks\n      } = data;\n\n      if (drinks) {\n        const newCocktails = drinks.map(item => {\n          const {\n            idDrink,\n            strDrink,\n            strDrinkThumb,\n            strAlcoholic,\n            strGlass\n          } = item;\n          return {\n            id: idDrink,\n            name: strDrink,\n            image: strDrinkThumb,\n            info: strAlcoholic,\n            glass: strGlass\n          };\n        });\n        setCocktails(newCocktails);\n      } else {\n        setCocktails([]);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchDrinks();\n  }, [searchTerm, fetchDrinks]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      cocktails,\n      searchTerm,\n      setSearchTerm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}; // make sure use\n\n\n_s(AppProvider, \"scj3FAqPLrb65ZWGXuyYcj2kQ14=\");\n\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n\n  return useContext(AppContext);\n};\n\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AppContext, AppProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/Users/KarolCiesielski/Desktop/myProject/Drink-Manual/src/context.js"],"names":["React","useState","useContext","useEffect","useCallback","url","AppContext","createContext","AppProvider","children","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","response","fetch","data","json","console","log","drinks","newCocktails","map","item","idDrink","strDrink","strDrinkThumb","strAlcoholic","strGlass","id","name","image","info","glass","error","useGlobalContext"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,GAAG,GAAG,2DAAZ;AACA,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,EAAnB;;AAEA,MAAMC,WAAW,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,GAAD,CAA5C;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMa,WAAW,GAAGV,WAAW,CAAE,YAAY;AACzC,QAAI;AACA,YAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,GAAI,GAAEK,UAAW,EAArB,CAA5B;AACA,YAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAaJ,IAAnB;;AACA,UAAII,MAAJ,EAAY;AACR,cAAMC,YAAY,GAAGD,MAAM,CAACE,GAAP,CAAYC,IAAD,IAAU;AACtC,gBAAM;AACFC,YAAAA,OADE;AAEFC,YAAAA,QAFE;AAGFC,YAAAA,aAHE;AAIFC,YAAAA,YAJE;AAKFC,YAAAA;AALE,cAMFL,IANJ;AAQA,iBAAO;AACHM,YAAAA,EAAE,EAAEL,OADD;AAEHM,YAAAA,IAAI,EAAEL,QAFH;AAGHM,YAAAA,KAAK,EAAEL,aAHJ;AAIHM,YAAAA,IAAI,EAAEL,YAJH;AAKHM,YAAAA,KAAK,EAAEL;AALJ,WAAP;AAOH,SAhBoB,CAArB;AAiBAhB,QAAAA,YAAY,CAACS,YAAD,CAAZ;AACH,OAnBD,MAmBO;AACHT,QAAAA,YAAY,CAAC,EAAD,CAAZ;AACH;AACJ,KA3BD,CA2BE,OAAOsB,KAAP,EAAc;AACZhB,MAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACH;AACJ,GA/B8B,EA+B7B,CAACzB,UAAD,CA/B6B,CAA/B;AAgCAP,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,WAAW;AACd,GAFQ,EAEN,CAACJ,UAAD,EAAYI,WAAZ,CAFM,CAAT;AAGA,sBACI,QAAC,UAAD,CAAY,QAAZ;AACI,IAAA,KAAK,EAAE;AAAEF,MAAAA,SAAF;AAAaF,MAAAA,UAAb;AAAyBC,MAAAA;AAAzB,KADX;AAAA,cAGKF;AAHL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA9CD,C,CA+CA;;;GA/CMD,W;;KAAAA,W;AAgDN,OAAO,MAAM4B,gBAAgB,GAAG,MAAM;AAAA;;AAClC,SAAOlC,UAAU,CAACI,UAAD,CAAjB;AACH,CAFM;;IAAM8B,gB;;AAIb,SAAS9B,UAAT,EAAqBE,WAArB","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport { useCallback } from 'react'\n\nconst url = \"https://www.thecocktaildb.com/api/json/v1/1/search.php?s=\"\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n    const [searchTerm, setSearchTerm] = useState('a')\n    const [cocktails, setCocktails] = useState([])\n\n    const fetchDrinks = useCallback( async () => {\n        try {\n            const response = await fetch(`${url}${searchTerm}`)\n            const data = await response.json()\n            console.log(data);\n            const { drinks } = data\n            if (drinks) {\n                const newCocktails = drinks.map((item) => {\n                    const {\n                        idDrink,\n                        strDrink,\n                        strDrinkThumb,\n                        strAlcoholic,\n                        strGlass,\n                    } = item\n\n                    return {\n                        id: idDrink,\n                        name: strDrink,\n                        image: strDrinkThumb,\n                        info: strAlcoholic,\n                        glass: strGlass,\n                    }\n                })\n                setCocktails(newCocktails)\n            } else {\n                setCocktails([])\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    },[searchTerm])\n    useEffect(() => {\n        fetchDrinks()\n    }, [searchTerm,fetchDrinks])\n    return (\n        <AppContext.Provider\n            value={{ cocktails, searchTerm, setSearchTerm }}\n        >\n            {children}\n        </AppContext.Provider>\n    )\n}\n// make sure use\nexport const useGlobalContext = () => {\n    return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }"]},"metadata":{},"sourceType":"module"}